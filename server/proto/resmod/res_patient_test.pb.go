// Fitxer de definició proto per a les entitats del Mòdul RESMOD.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: resmod/res_patient_test.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Registre de compliment del test.
type ResPatientTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseEntity  *ModelEntity `protobuf:"bytes,1,opt,name=base_entity,json=baseEntity,proto3" json:"base_entity,omitempty"`
	Test        *TstTest     `protobuf:"bytes,2,opt,name=test,proto3" json:"test,omitempty"`
	Therapist   *UsrUser     `protobuf:"bytes,3,opt,name=therapist,proto3" json:"therapist,omitempty"`
	Patient     *UsrUser     `protobuf:"bytes,4,opt,name=patient,proto3" json:"patient,omitempty"`
	AssignedAt  *Timestamp   `protobuf:"bytes,5,opt,name=assigned_at,json=assignedAt,proto3" json:"assigned_at,omitempty"`
	CompletedAt *Timestamp   `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3,oneof" json:"completed_at,omitempty"`
	EvaluatedBy *UsrUser     `protobuf:"bytes,7,opt,name=evaluated_by,json=evaluatedBy,proto3,oneof" json:"evaluated_by,omitempty"`
	EvaluatedAt *Timestamp   `protobuf:"bytes,8,opt,name=evaluated_at,json=evaluatedAt,proto3,oneof" json:"evaluated_at,omitempty"`
	Evaluation  *string      `protobuf:"bytes,9,opt,name=evaluation,proto3,oneof" json:"evaluation,omitempty"`
}

func (x *ResPatientTest) Reset() {
	*x = ResPatientTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resmod_res_patient_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResPatientTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPatientTest) ProtoMessage() {}

func (x *ResPatientTest) ProtoReflect() protoreflect.Message {
	mi := &file_resmod_res_patient_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPatientTest.ProtoReflect.Descriptor instead.
func (*ResPatientTest) Descriptor() ([]byte, []int) {
	return file_resmod_res_patient_test_proto_rawDescGZIP(), []int{0}
}

func (x *ResPatientTest) GetBaseEntity() *ModelEntity {
	if x != nil {
		return x.BaseEntity
	}
	return nil
}

func (x *ResPatientTest) GetTest() *TstTest {
	if x != nil {
		return x.Test
	}
	return nil
}

func (x *ResPatientTest) GetTherapist() *UsrUser {
	if x != nil {
		return x.Therapist
	}
	return nil
}

func (x *ResPatientTest) GetPatient() *UsrUser {
	if x != nil {
		return x.Patient
	}
	return nil
}

func (x *ResPatientTest) GetAssignedAt() *Timestamp {
	if x != nil {
		return x.AssignedAt
	}
	return nil
}

func (x *ResPatientTest) GetCompletedAt() *Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *ResPatientTest) GetEvaluatedBy() *UsrUser {
	if x != nil {
		return x.EvaluatedBy
	}
	return nil
}

func (x *ResPatientTest) GetEvaluatedAt() *Timestamp {
	if x != nil {
		return x.EvaluatedAt
	}
	return nil
}

func (x *ResPatientTest) GetEvaluation() string {
	if x != nil && x.Evaluation != nil {
		return *x.Evaluation
	}
	return ""
}

var File_resmod_res_patient_test_proto protoreflect.FileDescriptor

var file_resmod_res_patient_test_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x72, 0x65, 0x73, 0x6d, 0x6f, 0x64, 0x2f, 0x72, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x67, 0x62, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x74, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x2f, 0x74, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x75, 0x73, 0x72, 0x6d, 0x6f, 0x64, 0x2f, 0x75,
	0x73, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x04,
	0x0a, 0x0e, 0x52, 0x65, 0x73, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x73, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x74, 0x68, 0x65,
	0x72, 0x61, 0x70, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x74, 0x68,
	0x65, 0x72, 0x61, 0x70, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x73, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x31, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x36,
	0x0a, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x48, 0x01, 0x52, 0x0b, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02,
	0x52, 0x0b, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resmod_res_patient_test_proto_rawDescOnce sync.Once
	file_resmod_res_patient_test_proto_rawDescData = file_resmod_res_patient_test_proto_rawDesc
)

func file_resmod_res_patient_test_proto_rawDescGZIP() []byte {
	file_resmod_res_patient_test_proto_rawDescOnce.Do(func() {
		file_resmod_res_patient_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_resmod_res_patient_test_proto_rawDescData)
	})
	return file_resmod_res_patient_test_proto_rawDescData
}

var file_resmod_res_patient_test_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_resmod_res_patient_test_proto_goTypes = []any{
	(*ResPatientTest)(nil), // 0: proto.ResPatientTest
	(*ModelEntity)(nil),    // 1: proto.ModelEntity
	(*TstTest)(nil),        // 2: proto.TstTest
	(*UsrUser)(nil),        // 3: proto.UsrUser
	(*Timestamp)(nil),      // 4: proto.Timestamp
}
var file_resmod_res_patient_test_proto_depIdxs = []int32{
	1, // 0: proto.ResPatientTest.base_entity:type_name -> proto.ModelEntity
	2, // 1: proto.ResPatientTest.test:type_name -> proto.TstTest
	3, // 2: proto.ResPatientTest.therapist:type_name -> proto.UsrUser
	3, // 3: proto.ResPatientTest.patient:type_name -> proto.UsrUser
	4, // 4: proto.ResPatientTest.assigned_at:type_name -> proto.Timestamp
	4, // 5: proto.ResPatientTest.completed_at:type_name -> proto.Timestamp
	3, // 6: proto.ResPatientTest.evaluated_by:type_name -> proto.UsrUser
	4, // 7: proto.ResPatientTest.evaluated_at:type_name -> proto.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_resmod_res_patient_test_proto_init() }
func file_resmod_res_patient_test_proto_init() {
	if File_resmod_res_patient_test_proto != nil {
		return
	}
	file_model_entity_proto_init()
	file_gbl_timestamp_proto_init()
	file_tstmod_tst_test_proto_init()
	file_usrmod_usr_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_resmod_res_patient_test_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ResPatientTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_resmod_res_patient_test_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resmod_res_patient_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resmod_res_patient_test_proto_goTypes,
		DependencyIndexes: file_resmod_res_patient_test_proto_depIdxs,
		MessageInfos:      file_resmod_res_patient_test_proto_msgTypes,
	}.Build()
	File_resmod_res_patient_test_proto = out.File
	file_resmod_res_patient_test_proto_rawDesc = nil
	file_resmod_res_patient_test_proto_goTypes = nil
	file_resmod_res_patient_test_proto_depIdxs = nil
}
