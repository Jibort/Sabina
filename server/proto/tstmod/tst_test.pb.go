// Fitxer de definici贸 proto d'un test d'avaluaci贸.
// createdAt: 24/09/26 dj. JIQ

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: tstmod/tst_test.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Definici贸 d'un test d'avaluaci贸.
type TstTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseEntity *ModelEntity     `protobuf:"bytes,1,opt,name=base_entity,json=baseEntity,proto3" json:"base_entity,omitempty"`
	Category   *TstTestCategory `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	NameKey    string           `protobuf:"bytes,3,opt,name=name_key,json=nameKey,proto3" json:"name_key,omitempty"`
	DescKey    *string          `protobuf:"bytes,4,opt,name=desc_key,json=descKey,proto3,oneof" json:"desc_key,omitempty"`
	InstrKey   *string          `protobuf:"bytes,5,opt,name=instr_key,json=instrKey,proto3,oneof" json:"instr_key,omitempty"`
	Version    int32            `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	Root       *TstTest         `protobuf:"bytes,7,opt,name=root,proto3,oneof" json:"root,omitempty"`
	Therapist  *UsrUser         `protobuf:"bytes,8,opt,name=therapist,proto3" json:"therapist,omitempty"`
}

func (x *TstTest) Reset() {
	*x = TstTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tstmod_tst_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TstTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TstTest) ProtoMessage() {}

func (x *TstTest) ProtoReflect() protoreflect.Message {
	mi := &file_tstmod_tst_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TstTest.ProtoReflect.Descriptor instead.
func (*TstTest) Descriptor() ([]byte, []int) {
	return file_tstmod_tst_test_proto_rawDescGZIP(), []int{0}
}

func (x *TstTest) GetBaseEntity() *ModelEntity {
	if x != nil {
		return x.BaseEntity
	}
	return nil
}

func (x *TstTest) GetCategory() *TstTestCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *TstTest) GetNameKey() string {
	if x != nil {
		return x.NameKey
	}
	return ""
}

func (x *TstTest) GetDescKey() string {
	if x != nil && x.DescKey != nil {
		return *x.DescKey
	}
	return ""
}

func (x *TstTest) GetInstrKey() string {
	if x != nil && x.InstrKey != nil {
		return *x.InstrKey
	}
	return ""
}

func (x *TstTest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TstTest) GetRoot() *TstTest {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *TstTest) GetTherapist() *UsrUser {
	if x != nil {
		return x.Therapist
	}
	return nil
}

var File_tstmod_tst_test_proto protoreflect.FileDescriptor

var file_tstmod_tst_test_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x2f, 0x74, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x74, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x2f, 0x74, 0x73, 0x74, 0x5f, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x75, 0x73, 0x72, 0x6d, 0x6f, 0x64, 0x2f, 0x75, 0x73, 0x72, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x02, 0x0a, 0x07, 0x54, 0x73,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x08, 0x64, 0x65, 0x73,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64,
	0x65, 0x73, 0x63, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x73, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x48, 0x02, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x09, 0x74, 0x68, 0x65, 0x72, 0x61, 0x70, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x09, 0x74, 0x68, 0x65, 0x72, 0x61, 0x70, 0x69, 0x73, 0x74, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tstmod_tst_test_proto_rawDescOnce sync.Once
	file_tstmod_tst_test_proto_rawDescData = file_tstmod_tst_test_proto_rawDesc
)

func file_tstmod_tst_test_proto_rawDescGZIP() []byte {
	file_tstmod_tst_test_proto_rawDescOnce.Do(func() {
		file_tstmod_tst_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_tstmod_tst_test_proto_rawDescData)
	})
	return file_tstmod_tst_test_proto_rawDescData
}

var file_tstmod_tst_test_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tstmod_tst_test_proto_goTypes = []any{
	(*TstTest)(nil),         // 0: proto.TstTest
	(*ModelEntity)(nil),     // 1: proto.ModelEntity
	(*TstTestCategory)(nil), // 2: proto.TstTestCategory
	(*UsrUser)(nil),         // 3: proto.UsrUser
}
var file_tstmod_tst_test_proto_depIdxs = []int32{
	1, // 0: proto.TstTest.base_entity:type_name -> proto.ModelEntity
	2, // 1: proto.TstTest.category:type_name -> proto.TstTestCategory
	0, // 2: proto.TstTest.root:type_name -> proto.TstTest
	3, // 3: proto.TstTest.therapist:type_name -> proto.UsrUser
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_tstmod_tst_test_proto_init() }
func file_tstmod_tst_test_proto_init() {
	if File_tstmod_tst_test_proto != nil {
		return
	}
	file_model_entity_proto_init()
	file_tstmod_tst_test_category_proto_init()
	file_usrmod_usr_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tstmod_tst_test_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TstTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tstmod_tst_test_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tstmod_tst_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tstmod_tst_test_proto_goTypes,
		DependencyIndexes: file_tstmod_tst_test_proto_depIdxs,
		MessageInfos:      file_tstmod_tst_test_proto_msgTypes,
	}.Build()
	File_tstmod_tst_test_proto = out.File
	file_tstmod_tst_test_proto_rawDesc = nil
	file_tstmod_tst_test_proto_goTypes = nil
	file_tstmod_tst_test_proto_depIdxs = nil
}
