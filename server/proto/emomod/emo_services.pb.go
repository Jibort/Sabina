// Fitxer de definició proto pels serveis de sincronització.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: emomod/emo_services.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Emprempta digital de EmoMood.
type GbMoodFingerPrint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastMoodId     int32      `protobuf:"varint,1,opt,name=last_mood_id,json=lastMoodId,proto3" json:"last_mood_id,omitempty"`
	LastMoodUpdate *Timestamp `protobuf:"bytes,2,opt,name=last_mood_update,json=lastMoodUpdate,proto3" json:"last_mood_update,omitempty"`
}

func (x *GbMoodFingerPrint) Reset() {
	*x = GbMoodFingerPrint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emomod_emo_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GbMoodFingerPrint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GbMoodFingerPrint) ProtoMessage() {}

func (x *GbMoodFingerPrint) ProtoReflect() protoreflect.Message {
	mi := &file_emomod_emo_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GbMoodFingerPrint.ProtoReflect.Descriptor instead.
func (*GbMoodFingerPrint) Descriptor() ([]byte, []int) {
	return file_emomod_emo_services_proto_rawDescGZIP(), []int{0}
}

func (x *GbMoodFingerPrint) GetLastMoodId() int32 {
	if x != nil {
		return x.LastMoodId
	}
	return 0
}

func (x *GbMoodFingerPrint) GetLastMoodUpdate() *Timestamp {
	if x != nil {
		return x.LastMoodUpdate
	}
	return nil
}

// Emprempta digital de EmoEmotion.
type GbEmotionFingerPrint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastEmotionId     int32      `protobuf:"varint,1,opt,name=last_emotion_id,json=lastEmotionId,proto3" json:"last_emotion_id,omitempty"`
	LastEmotionUpdate *Timestamp `protobuf:"bytes,2,opt,name=last_emotion_update,json=lastEmotionUpdate,proto3" json:"last_emotion_update,omitempty"`
}

func (x *GbEmotionFingerPrint) Reset() {
	*x = GbEmotionFingerPrint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emomod_emo_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GbEmotionFingerPrint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GbEmotionFingerPrint) ProtoMessage() {}

func (x *GbEmotionFingerPrint) ProtoReflect() protoreflect.Message {
	mi := &file_emomod_emo_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GbEmotionFingerPrint.ProtoReflect.Descriptor instead.
func (*GbEmotionFingerPrint) Descriptor() ([]byte, []int) {
	return file_emomod_emo_services_proto_rawDescGZIP(), []int{1}
}

func (x *GbEmotionFingerPrint) GetLastEmotionId() int32 {
	if x != nil {
		return x.LastEmotionId
	}
	return 0
}

func (x *GbEmotionFingerPrint) GetLastEmotionUpdate() *Timestamp {
	if x != nil {
		return x.LastEmotionUpdate
	}
	return nil
}

// Emprempta digital del mòdul EMOMOD.
type GbSyncEmoMod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserLang   string                `protobuf:"bytes,2,opt,name=user_lang,json=userLang,proto3" json:"user_lang,omitempty"`
	EmoMood    *GbMoodFingerPrint    `protobuf:"bytes,3,opt,name=emo_mood,json=emoMood,proto3,oneof" json:"emo_mood,omitempty"`
	EmoEmotion *GbEmotionFingerPrint `protobuf:"bytes,4,opt,name=emo_emotion,json=emoEmotion,proto3,oneof" json:"emo_emotion,omitempty"`
}

func (x *GbSyncEmoMod) Reset() {
	*x = GbSyncEmoMod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emomod_emo_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GbSyncEmoMod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GbSyncEmoMod) ProtoMessage() {}

func (x *GbSyncEmoMod) ProtoReflect() protoreflect.Message {
	mi := &file_emomod_emo_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GbSyncEmoMod.ProtoReflect.Descriptor instead.
func (*GbSyncEmoMod) Descriptor() ([]byte, []int) {
	return file_emomod_emo_services_proto_rawDescGZIP(), []int{2}
}

func (x *GbSyncEmoMod) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GbSyncEmoMod) GetUserLang() string {
	if x != nil {
		return x.UserLang
	}
	return ""
}

func (x *GbSyncEmoMod) GetEmoMood() *GbMoodFingerPrint {
	if x != nil {
		return x.EmoMood
	}
	return nil
}

func (x *GbSyncEmoMod) GetEmoEmotion() *GbEmotionFingerPrint {
	if x != nil {
		return x.EmoEmotion
	}
	return nil
}

var File_emomod_emo_services_proto protoreflect.FileDescriptor

var file_emomod_emo_services_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x6d, 0x6f, 0x6d, 0x6f, 0x64, 0x2f, 0x65, 0x6d, 0x6f, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x67, 0x62, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x65, 0x6d, 0x6f, 0x6d, 0x6f, 0x64, 0x2f,
	0x65, 0x6d, 0x6f, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x6c, 0x6f, 0x63, 0x6d, 0x6f, 0x64, 0x2f, 0x6c, 0x6f, 0x63, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a,
	0x11, 0x47, 0x62, 0x4d, 0x6f, 0x6f, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x6f, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x6f, 0x64, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x6f,
	0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x80, 0x01, 0x0a, 0x14, 0x47, 0x62, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x40, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x0c, 0x47, 0x62, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6d,
	0x6f, 0x4d, 0x6f, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x08, 0x65, 0x6d,
	0x6f, 0x5f, 0x6d, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x62, 0x4d, 0x6f, 0x6f, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x4d, 0x6f, 0x6f,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6d, 0x6f, 0x5f, 0x65, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x62, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x48, 0x01, 0x52, 0x0a, 0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6d, 0x6f, 0x5f,
	0x6d, 0x6f, 0x6f, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x6d, 0x6f, 0x5f, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x94, 0x01, 0x0a, 0x0e, 0x45, 0x6d, 0x6f, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x45, 0x6d, 0x6f, 0x4d, 0x6f, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x62, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6d, 0x6f, 0x4d, 0x6f, 0x64, 0x1a, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x73, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x74, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_emomod_emo_services_proto_rawDescOnce sync.Once
	file_emomod_emo_services_proto_rawDescData = file_emomod_emo_services_proto_rawDesc
)

func file_emomod_emo_services_proto_rawDescGZIP() []byte {
	file_emomod_emo_services_proto_rawDescOnce.Do(func() {
		file_emomod_emo_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_emomod_emo_services_proto_rawDescData)
	})
	return file_emomod_emo_services_proto_rawDescData
}

var file_emomod_emo_services_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_emomod_emo_services_proto_goTypes = []any{
	(*GbMoodFingerPrint)(nil),      // 0: proto.GbMoodFingerPrint
	(*GbEmotionFingerPrint)(nil),   // 1: proto.GbEmotionFingerPrint
	(*GbSyncEmoMod)(nil),           // 2: proto.GbSyncEmoMod
	(*Timestamp)(nil),              // 3: proto.Timestamp
	(*PrtDownloadTranslation)(nil), // 4: proto.PrtDownloadTranslation
	(*EmoModuleLists)(nil),         // 5: proto.EmoModuleLists
	(*PrtTranslation)(nil),         // 6: proto.PrtTranslation
}
var file_emomod_emo_services_proto_depIdxs = []int32{
	3, // 0: proto.GbMoodFingerPrint.last_mood_update:type_name -> proto.Timestamp
	3, // 1: proto.GbEmotionFingerPrint.last_emotion_update:type_name -> proto.Timestamp
	0, // 2: proto.GbSyncEmoMod.emo_mood:type_name -> proto.GbMoodFingerPrint
	1, // 3: proto.GbSyncEmoMod.emo_emotion:type_name -> proto.GbEmotionFingerPrint
	2, // 4: proto.EmoSyncService.CheckEmoMod:input_type -> proto.GbSyncEmoMod
	4, // 5: proto.EmoSyncService.TranslateIt:input_type -> proto.PrtDownloadTranslation
	5, // 6: proto.EmoSyncService.CheckEmoMod:output_type -> proto.EmoModuleLists
	6, // 7: proto.EmoSyncService.TranslateIt:output_type -> proto.PrtTranslation
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_emomod_emo_services_proto_init() }
func file_emomod_emo_services_proto_init() {
	if File_emomod_emo_services_proto != nil {
		return
	}
	file_gbl_timestamp_proto_init()
	file_emomod_emo_entities_proto_init()
	file_locmod_loc_services_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_emomod_emo_services_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GbMoodFingerPrint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emomod_emo_services_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GbEmotionFingerPrint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emomod_emo_services_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GbSyncEmoMod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_emomod_emo_services_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emomod_emo_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_emomod_emo_services_proto_goTypes,
		DependencyIndexes: file_emomod_emo_services_proto_depIdxs,
		MessageInfos:      file_emomod_emo_services_proto_msgTypes,
	}.Build()
	File_emomod_emo_services_proto = out.File
	file_emomod_emo_services_proto_rawDesc = nil
	file_emomod_emo_services_proto_goTypes = nil
	file_emomod_emo_services_proto_depIdxs = nil
}
